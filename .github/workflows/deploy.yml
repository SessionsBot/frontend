name: Deploy to Koyeb
run-name: Deploy to Koyeb

on:
    workflow_dispatch:
#   push:
#     tags:
#       - "v*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write # Required to create and update deployments
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create GitHub Deployment
        id: create_deployment
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              required_contexts: [],
              auto_merge: false,
              environment: "Website - Sessions Bot",
              production_environment: true
            });

            core.setOutput("deployment_id", response.data.id);

      - name: Install Koyeb CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/koyeb/koyeb-cli/master/install.sh | sh
          echo "$HOME/.koyeb/bin" >> $GITHUB_PATH

      - name: Deploy to Koyeb
        id: koyeb_deploy
        continue-on-error: true
        env:
          KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}
        run: |
          koyeb deploy . painful-peri/app --token $KOYEB_API_KEY --env GIT_SHA=$GITHUB_SHA

      - name: Update Deployment Status
        if: always()
        uses: actions/github-script@v7
        env:
          DEPLOYMENT_ID: ${{ steps.create_deployment.outputs.deployment_id }}
          KOYEB_STATUS: ${{ steps.koyeb_deploy.outcome }}
        with:
          script: |
            const deploymentId = Number(process.env.DEPLOYMENT_ID);
            const status = process.env.KOYEB_STATUS === 'success' ? 'success' : 'failure';

            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deploymentId,
              state: status,
              environment: "Website - Sessions Bot",
              environment_url: "https://sessionsbot.fyi/",
              log_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            });
